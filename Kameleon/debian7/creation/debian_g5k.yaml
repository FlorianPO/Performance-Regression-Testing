#==============================================================================
# vim: softtabstop=2 shiftwidth=2 expandtab fenc=utf-8 cc=81 tw=80
#==============================================================================
#
# DESCRIPTION: <MY RECIPE DESCRIPTION>
#
#==============================================================================

---
extend: default/grid5000/debian7.yaml

global:
  # You can see the base template `default/grid5000/debian7.yaml` to know the
  # variables that you can override
  my_g5k_site: grenoble
  my_g5k_user: alegrand
  my_g5k_property: -p \"gpu='YES'\"
  my_g5k_nodes: 1
  my_g5k_walltime: "1:00:00" 
  filename: kameleonImage
  filesystem: ext4

bootstrap:
  - "@base"

setup:
  - "@base"
  - first_step:
    - some_packages:
      - exec_in: |
          apt-get update
          apt-get install -y python2.7-dev python-httplib2 python-pip
          apt-get install -y vim emacs
          apt-get install -y curl patch
          apt-get install -y git subversion mercurial
          apt-get install -y build-essential gfortran
          apt-get install -y autoconf automake cmake cmake-data doxygen texinfo
          apt-get install -y libtool
          apt-get install -y libboost-dev
          apt-get install -y gawk
          apt-get install -y bison flex
          apt-get install -y binutils-dev libelf-dev libiberty-dev
          apt-get install -y libz-dev
          apt-get install -y libqt4-dev freeglut3-dev
          apt-get install -y environment-modules
          apt-get install -y hwloc libhwloc-dev
    - spack_execo:
      - pipe: # copy data info script in node
        - exec_local: cat ../../scripts/get_info.sh
        - exec_in: cat > get_info.s
      - exec_in: |
          # NODE INFO
          bash get_info.sh node_info.org

          # SPACK
          git clone https://github.com/fpruvost/spack          
          cd spack/
          git checkout morse

          # EXECO
          pip install --user execo

export:
  - g5k_custom:
    - in_to_local:
      - exec_in: |
          tar -cvf kameleon_scripts_in.tar kameleon_scripts/in/                   # Kameleon scripts
      - pipe:                                                                     # PIPE Kameleon scripts
        - exec_in: cat kameleon_scripts_in.tar
        - exec_local: cat > kameleon_scripts_in.tar
      - pipe:                                                                     # PIPE Node info
        - exec_in: cat node_info.org
        - exec_local: cat > node_info.org
      - exec_local: |
          tar -xvf kameleon_scripts_in.tar
          rm kameleon_scripts_in.tar

    - out_to_local:
      - exec_out: |
          tar -cvf kameleon_scripts_out.tar kameleon_scripts/out/                 # Kameleon scripts
          tar -cvf OAR_logs.tar $(find . -name "OAR.*.$(cat job_id).*")           # OAR logs
      - pipe:                                                                     # PIPE Kameleon scripts
        - exec_out: cat kameleon_scripts_out.tar
        - exec_local: cat > kameleon_scripts_out.tar
      - pipe:                                                                     # PIPE OAR logs
        - exec_out: cat OAR_logs.tar
        - exec_local: cat > OAR_logs.tar
      - pipe:                                                                     # PIPE ssh_config
        - exec_out: cat ssh_config
        - exec_local: cat > ssh_config_out
      - exec_local: |
          tar -xvf kameleon_scripts_out.tar
          rm kameleon_scripts_out.tar
          tar -xvf OAR_logs.tar
          rm OAR_logs.tar
      - exec_out: |
          rm kameleon_scripts_out.tar
          rm OAR_logs.tar

  - save_appliance_from_g5k:
