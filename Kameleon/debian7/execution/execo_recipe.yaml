#==============================================================================
# vim: softtabstop=2 shiftwidth=2 expandtab fenc=utf-8 cc=81 tw=80
#==============================================================================
#
# DESCRIPTION: <MY RECIPE DESCRIPTION>
#
#==============================================================================

---
extend: default/grid5000/debian7.yaml

global:
  # You can see the base template `default/grid5000/debian7.yaml` to know the
  # variables that you can override
  my_g5k_site: grenoble
  my_g5k_user: fpopek
  my_g5k_property: -p \"gpu='YES'\"
  my_g5k_nodes: 1
  my_g5k_walltime: "2:00:00" 
  my_g5k_env: ~/kameleon_workdir/debian_g5k/kameleonImage.env

bootstrap:
  - "@base"

setup:
  - first_step:
    - null_step: # fatal error otherwise
      - exec_in: echo "null_step"
    - local_scripts:                                                              # Local scripts
      - exec_local: |
          python ../../scripts_local/csv_filler.py ../../input_data/revisions.csv ../../input_data/commands.csv ../../input_data/branches.csv
          cp ../../input_data/revisions.csv ../../scripts/revisions_abstract.csv
          cp ../../scripts_local/csv_reader.py ../../scripts/csv_reader.py
    - scripts_transfer:                                                           # Copy every scripts and data files from local to in
      - exec_local: |
          export DIRECTORY=$PWD
          cd ../../scripts/
          tar -cvf $DIRECTORY/scripts.tar *
      - pipe:
        - exec_local: cat scripts.tar
        - exec_in: cat > scripts.tar
      - exec_local: |                                                             # Clean local
          rm scripts.tar
          rm ../../scripts/revisions_abstract.csv
          rm ../../scripts/csv_reader.py
      - exec_in: |
          tar -xvf scripts.tar
          rm scripts.tar      

    - execo_step:                                                                 # Main experiment
      - exec_in: |
          # SPACK ENVIRONMENT
          export SPACK_ROOT=$PWD/../debian_g5k/spack/
          export PATH=$SPACK_ROOT/bin:$PATH

          # NODE INFO
          bash get_info.sh node_info.org

          # SPACK PACKAGES
          python chameleon_package_builder.py revisions.csv revisions_abstract.csv $SPACK_ROOT
          python starpu_package_builder.py revisions.csv revisions_abstract.csv $SPACK_ROOT

          # EXECO
          python execo_script.py revisions.csv revisions_abstract.csv
      - breakpoint: "Breakpoint..."

export:
  - g5k_custom:
    - in_to_local:
      - exec_in: |
          tar -cvf kameleon_scripts_in.tar kameleon_scripts/in/                   # Kameleon scripts
          tar -cvf starpu_results.tar starpu_results/                             # StarPU results
      - pipe:                                                                     # PIPE Kameleon scripts
        - exec_in: cat kameleon_scripts_in.tar
        - exec_local: cat > kameleon_scripts_in.tar
      - pipe:                                                                     # StarPU results
        - exec_in: cat starpu_results.tar
        - exec_local: cat > starpu_results.tar
      - exec_local: |
          tar -xvf kameleon_scripts_in.tar
          rm kameleon_scripts_in.tar
          tar -xvf starpu_results.tar
          rm starpu_results.tar
      - pipe:                                                                     # PIPE Node info
        - exec_in: cat node_info.org
        - exec_local: cat > starpu_results/node_info.org

    - out_to_local:
      - exec_out: |
          tar -cvf kameleon_scripts_out.tar kameleon_scripts/out/                 # Kameleon scripts
          tar -cvf OAR_logs.tar $(find . -name "OAR.*.$(cat job_id).*")           # OAR logs
      - pipe:                                                                     # PIPE Kameleon scripts
        - exec_out: cat kameleon_scripts_out.tar
        - exec_local: cat > kameleon_scripts_out.tar
      - pipe:                                                                     # PIPE OAR logs
        - exec_out: cat OAR_logs.tar
        - exec_local: cat > OAR_logs.tar
      - pipe:                                                                     # PIPE ssh_config
        - exec_out: cat ssh_config
        - exec_local: cat > ssh_config_out
      - exec_local: |
          tar -xvf kameleon_scripts_out.tar
          rm kameleon_scripts_out.tar
          tar -xvf OAR_logs.tar
          rm OAR_logs.tar
      - exec_out: |
          rm kameleon_scripts_out.tar
          rm OAR_logs.tar

    - data_csv:                                                                   # Retrieving StarPU data in a CSV file
      - exec_local: |
          python ../../scripts_local/org_builder.py ../../scripts/revisions.csv ../../input_data/revisions.csv starpu_results/
          python ../../scripts_local/data_csv.py starpu_results/
          rm ../../scripts/revisions.csv
          rm ../../scripts_local/csv_reader.pyc

