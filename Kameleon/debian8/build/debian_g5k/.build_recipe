---
name: debian_g5k
path: "/home/florian/Bureau/debian8/debian_g5k.yaml"
base_recipes_files:
- "/home/florian/Bureau/debian8/debian_g5k.yaml"
- "/home/florian/Bureau/debian8/default/grid5000/debian8.yaml"
- "/home/florian/Bureau/debian8/default/chroot/debian8.yaml"
- "/home/florian/Bureau/debian8/default/chroot/debian7.yaml"
- "/home/florian/Bureau/debian8/default/chroot/base.yaml"
step_files:
- "/home/florian/Bureau/debian8/default/grid5000/steps/global/grid5000_options.yaml"
- "/home/florian/Bureau/debian8/default/chroot/steps/aliases/defaults.yaml"
- "/home/florian/Bureau/debian8/default/grid5000/steps/bootstrap/g5k_reserv.yaml"
- "/home/florian/Bureau/debian8/default/grid5000/steps/export/save_appliance_from_g5k.yaml"
env_files:
- "/home/florian/Bureau/debian8/default/chroot/steps/env/bashrc"
- "/home/florian/Bureau/debian8/default/chroot/steps/env/functions.sh"
data_files: []
global:
  kameleon_recipe_name: debian_g5k
  kameleon_recipe_dir: "/home/florian/Bureau/debian8"
  kameleon_cwd: "/home/florian/Bureau/debian8/build/debian_g5k"
  in_context:
    cmd: ssh -A -t -F /home/florian/Bureau/debian8/build/debian_g5k/ssh_config debian_g5k
      /bin/bash
    proxy_cache: 127.0.0.1
    workdir: "/root/kameleon_workdir/debian_g5k"
    interactive_cmd: ssh -A -t -F /home/florian/Bureau/debian8/build/debian_g5k/ssh_config
      debian_g5k /bin/bash
  out_context:
    cmd: ssh -A -t -F /home/florian/Bureau/debian8/build/debian_g5k/ssh_config grenoble
      /bin/bash
    proxy_cache: 127.0.0.1
    workdir: "/home/fpopek/kameleon_workdir/debian_g5k"
    interactive_cmd: ssh -A -t -F /home/florian/Bureau/debian8/build/debian_g5k/ssh_config
      grenoble /bin/bash
  proxy_local: ''
  proxy_out: ''
  proxy_in: ''
  user_name: kameleon
  user_password: kameleon
  root_password: kameleon
  user_groups: sudo
  default_keyboard_layout: us,fr,de
  default_locales: POSIX C en_US fr_FR de_DE
  default_lang: en_US.UTF-8
  default_timezone: UTC
  appliance_tar_compression_level: '9'
  rootfs_archive_url: http://kameleon.imag.fr/rootfs/x86_64/debian8.tar.xz
  rootfs_archive_download_path: "/home/florian/Bureau/debian8/build/debian_g5k/rootfs.tar.xz"
  rootfs: "/home/florian/Bureau/debian8/build/debian_g5k/rootfs"
  arch: x86_64
  hostname: kameleon-debian
  filesystem_type: ext4
  image_size: 10G
  image_format: qcow2
  image_disk: "/home/florian/Bureau/debian8/build/debian_g5k/base_debian_g5k"
  appliance_formats: qcow2 tar.gz
  appliance_filename: "/home/florian/Bureau/debian8/build/debian_g5k/debian_g5k"
  appliance_tar_excludes: "./etc/fstab ./root/.bash_history ./root/kameleon_workdir
    ./root/.ssh ./var/tmp/* ./tmp/* ./var/log/* ./dev/* ./proc/* ./run/* ./sys/*"
  include_steps:
  - debian/jessie
  - debian
  kernel_args: quiet net.ifnames=0 biosdevname=0
  distrib: debian
  release: jessie
  release_number: 8
  kernel_arch: amd64
  apt_repository: http://ftp.debian.org/debian/
  apt_enable_contrib: true
  apt_enable_nonfree: true
  setup_packages: sudo vim bash-completion curl resolvconf bzip2 bsdutils ca-certificates
    locales man-db less libui-dialog-perl dialog isc-dhcp-client ifupdown iptables
    iputils-ping iproute2 netbase net-tools psmisc openssh-server acpid acpi-support-base
    sysvinit systemd systemd-sysv pciutils
  g5k_user: fpopek
  g5k_site: grenoble
  g5k_property: -p "gpu='YES'"
  g5k_nodes: '1'
  g5k_walltime: '1:00:00'
  kenv: jessie-x64-base
  ssh_config_file: "/home/florian/Bureau/debian8/build/debian_g5k/ssh_config"
  out_cwd: "/home/fpopek/kameleon_workdir/debian_g5k"
  in_cwd: "/root/kameleon_workdir/debian_g5k"
  my_g5k_site: grenoble
  my_g5k_user: fpopek
  my_g5k_property: -p \"gpu='YES'\"
  my_g5k_nodes: 1
  my_g5k_walltime: '1:00:00'
  filename: kameleonImage
  filesystem: ext4
  persistent_cache: 'false'
  kameleon_uuid: 3dd86391-edd0-4f71-bf79-6d89cb965f2a
  kameleon_short_uuid: 6d89cb965f2a
aliases:
  write_local:
  - exec_local: |
      mkdir -p $(dirname @1);
      cat >@1 <<EOF
      @2
      EOF
  write_in:
  - exec_in: |
      mkdir -p $(dirname @1);
      cat >@1 <<EOF
      @2
      EOF
  write_out:
  - exec_out: |
      mkdir -p $(dirname @1);
      cat >@1 <<EOF
      @2
      EOF
  append_local:
  - exec_local: |
      mkdir -p $(dirname @1);
      cat >>@1 <<EOF
      @2
      EOF
  append_in:
  - exec_in: |
      mkdir -p $(dirname @1);
      cat >>@1 <<EOF
      @2
      EOF
  append_out:
  - exec_out: |
      mkdir -p $(dirname @1);
      cat >>@1 <<EOF
      @2
      EOF
  local2out:
  - exec_out: |
      mkdir -p $(dirname @2)
  - pipe:
    - exec_local: cat @1
    - exec_out: cat > @2
  local2in:
  - exec_in: mkdir -p $(dirname @2)
  - pipe:
    - exec_local: cat @1
    - exec_in: cat > @2
  out2local:
  - exec_local: mkdir -p $(dirname @2)
  - pipe:
    - exec_out: cat @1
    - exec_local: cat > @2
  out2in:
  - exec_in: mkdir -p $(dirname @2)
  - pipe:
    - exec_out: cat @1
    - exec_in: cat > @2
  in2local:
  - exec_local: mkdir -p $(dirname @2)
  - pipe:
    - exec_in: cat @1
    - exec_local: cat > @2
  in2out:
  - exec_out: mkdir -p $(dirname @2)
  - pipe:
    - exec_in: cat @1
    - exec_out: cat > @2
  check_cmd_out:
  - rescue:
    - exec_out: command -V @1 2> /dev/null
    - breakpoint: "@1 is missing from out_context"
  check_cmd_local:
  - rescue:
    - exec_local: command -V @1 2> /dev/null
    - breakpoint: "@1 is missing from local_context"
  check_cmd_in:
  - rescue:
    - exec_in: command -V @1 2> /dev/null
    - breakpoint: "@1 is missing from in_context"
  umount_out:
  - exec_out: |
      echo "try umount @1..." ; mountpoint -q "@1" && umount -f -l "@1" || true
  umount_local:
  - exec_local: |
      echo "try umount @1..." ; mountpoint -q "@1" && umount -f -l "@1" || true
  umount_in:
  - exec_in: |
      echo "try umount @1..." ; mountpoint -q "@1" && umount -f -l "@1" || true
  download_file_in:
  - exec_in: __download "@1" "@2"
  download_file_out:
  - exec_out: __download "@1" "@2"
  download_file_local:
  - exec_local: __download "@1" "@2"
steps:
- bootstrap/g5k_reserv/create_local_ssh_config_base:
    identifier: edc6e20ed644
    cmds:
    - exec_local: |-
        mkdir -p $(dirname /home/florian/Bureau/debian8/build/debian_g5k/ssh_config);
        cat >/home/florian/Bureau/debian8/build/debian_g5k/ssh_config <<EOF
        Host *
          UserKnownHostsFile /dev/null
          StrictHostKeyChecking no
          ConnectTimeout 2
          LogLevel FATAL
          ForwardAgent yes
          Protocol 2
          ControlPath /tmp/6d89cb965f2a%r@%h:%p
          ControlMaster auto
          ControlPersist yes
          Compression yes
        Host g5kaccess
          User fpopek
          Hostname access.grid5000.fr
        Host grenoble
          User fpopek
          ProxyCommand ssh -F /home/florian/Bureau/debian8/build/debian_g5k/ssh_config g5kaccess -W %h:%p
        EOF
- bootstrap/g5k_reserv/deploy_image:
    identifier: 67150c07d543
    cmds:
    - exec_out: echo "Deploying image jessie-x64-base with kadeploy"
    - exec_out: sleep 1
    - exec_out: echo "Submitting a job for deployment"
    - exec_out: oarsub -p "gpu='YES'" -n "6d89cb965f2a" -l nodes=1,walltime=1:00:00
        -t deploy "sleep 1000000"
    - exec_out: |-
        echo "Retrieving job ID"
        export jobid=`oarstat -u | tail -n 1 | grep -o -E '[0-9]+' | head -n 1`
        echo $jobid > job_id
    - exec_out: |-
        echo -n "Waiting for the reservation to be ready"
        until $(oarstat -fu fpopek | grep -q "state = Running")
        do
          echo -n .
          sleep 2
        done
        sleep 1
        echo " ~> OK"
    - exec_out: echo "Getting the machine name"
    - exec_out: export machine=`oarstat -fu fpopek | grep assigned_hostnames | tail
        -n 1 | cut -d ' ' -f 7`
    - exec_out: echo "Deploying environment jessie-x64-base on $machine"
    - exec_out: kadeploy3 -e jessie-x64-base -m $machine -k
    - pipe:
      - exec_out: echo $machine
      - exec_local: cat >/home/florian/Bureau/debian8/build/debian_g5k/g5k_machine
    - exec_out: sleep 1
- bootstrap/g5k_reserv/create_out_ssh_config:
    identifier: 820792b3d061
    cmds:
    - exec_out: |-
        mkdir -p $(dirname /home/fpopek/kameleon_workdir/debian_g5k/ssh_config);
        cat >/home/fpopek/kameleon_workdir/debian_g5k/ssh_config <<EOF
        Host debian_g5k
          User root
          Hostname $machine
          UserKnownHostsFile /dev/null
          StrictHostKeyChecking no
          ConnectTimeout 2
          LogLevel FATAL
          ForwardAgent yes
          Protocol 2
        EOF
- bootstrap/g5k_reserv/append_ssh_node_config:
    identifier: 1486b622f910
    cmds:
    - exec_local: |-
        mkdir -p $(dirname /home/florian/Bureau/debian8/build/debian_g5k/ssh_config);
        cat >>/home/florian/Bureau/debian8/build/debian_g5k/ssh_config <<EOF
        Host debian_g5k
          User root
          ProxyCommand ssh -F /home/florian/Bureau/debian8/build/debian_g5k/ssh_config grenoble "nc -q 1 `cat /home/florian/Bureau/debian8/build/debian_g5k/g5k_machine | awk '{print $NF}'` %p"
        EOF
- setup/first_step/some_packages:
    identifier: 5a75e3ea10b8
    cmds:
    - exec_in: |-
        apt-get update
        apt-get install -y python2.7-dev python-httplib2 python-pip
        apt-get install -y vim emacs
        apt-get install -y curl patch
        apt-get install -y git subversion mercurial
        apt-get install -y build-essential gfortran
        apt-get install -y autoconf automake cmake cmake-data doxygen texinfo
        apt-get install -y libtool
        apt-get install -y libboost-dev
        apt-get install -y gawk
        apt-get install -y bison flex
        apt-get install -y binutils-dev libelf-dev libiberty-dev
        apt-get install -y libz-dev
        apt-get install -y libqt4-dev freeglut3-dev
        apt-get install -y environment-modules
        apt-get install -y hwloc libhwloc-dev
- setup/first_step/spack_execo:
    identifier: dd46140024a4
    cmds:
    - exec_in: "# SPACK\ngit clone https://github.com/fpruvost/spack\nexport SPACK_ROOT=$PWD/spack/\nexport
        PATH=$SPACK_ROOT/bin:$PATH          \ncd spack/\ngit checkout morse\n\n# EXECO\npip
        install --user execo\n"
- export/g5k_custom/in_to_local:
    identifier: 7b925f522051
    cmds:
    - exec_in: 'tar -cvf kameleon_scripts_in.tar kameleon_scripts/in/                   #
        Kameleon scripts'
    - pipe:
      - exec_in: cat kameleon_scripts_in.tar
      - exec_local: cat > kameleon_scripts_in.tar
    - exec_local: |-
        tar -xvf kameleon_scripts_in.tar
        rm kameleon_scripts_in.tar
- export/g5k_custom/out_to_local:
    identifier: ba8002b924f6
    cmds:
    - exec_out: |-
        tar -cvf kameleon_scripts_out.tar kameleon_scripts/out/                 # Kameleon scripts
        tar -cvf OAR_logs.tar $(find . -name "OAR.*.$(cat job_id).*")           # OAR logs
    - pipe:
      - exec_out: cat kameleon_scripts_out.tar
      - exec_local: cat > kameleon_scripts_out.tar
    - pipe:
      - exec_out: cat OAR_logs.tar
      - exec_local: cat > OAR_logs.tar
    - pipe:
      - exec_out: cat ssh_config
      - exec_local: cat > ssh_config_out
    - exec_local: |-
        tar -xvf kameleon_scripts_out.tar
        rm kameleon_scripts_out.tar
        tar -xvf OAR_logs.tar
        rm OAR_logs.tar
- export/save_appliance_from_g5k/save_as_g5k:
    identifier: 015a64d451f7
    cmds:
    - exec_out: echo "Using tgz g5k to Export the machine"
    - exec_in: tgz-g5k /root/kameleon_workdir/debian_g5k/kameleonImage.tar.gz
    - exec_out: |-
        rsync -avz -e "ssh -F /home/fpopek/kameleon_workdir/debian_g5k/ssh_config" \
          debian_g5k:/root/kameleon_workdir/debian_g5k/kameleonImage.tar.gz \
          /home/fpopek/kameleon_workdir/debian_g5k/kameleonImage.tar.gz
    - exec_out: echo "Saved tar.gz appliance to /home/fpopek/kameleon_workdir/debian_g5k/kameleonImage.tar.gz"
    - exec_in: rm -f /root/kameleon_workdir/debian_g5k/kameleonImage.tar.gz
    - exec_out: echo "Getting the appropiate post install"
    - pipe:
      - exec_out: kaenv3 -p jessie-x64-base | grep archive
      - exec_in: cat > /tmp/postinstall
    - exec_in: |-
        mkdir -p $(dirname /root/kameleon_workdir/debian_g5k/debian_g5k_img.yaml);
        cat >/root/kameleon_workdir/debian_g5k/debian_g5k_img.yaml <<EOF
        #
        # Kameleon generated based on kadeploy description file
        #

        name: debian_g5k

        version: 1

        os: linux

        image:
          file: kameleonImage.tar.gz
          kind: tar
          compression: gzip

        postinstalls:
        `cat /tmp/postinstall`
          compression: gzip
          script: traitement.ash /rambin

        boot:
          kernel: /boot/`basename /boot/vmlinu*`
          initrd: /boot/`basename /boot/init*`

        filesystem: ext4
        EOF
    - exec_out: mkdir -p $(dirname /home/fpopek/kameleon_workdir/debian_g5k/debian_g5k_img.yaml)
    - pipe:
      - exec_in: cat /root/kameleon_workdir/debian_g5k/debian_g5k_img.yaml
      - exec_out: cat > /home/fpopek/kameleon_workdir/debian_g5k/debian_g5k_img.yaml
- export/_clean_export/_clean_0_deploy_image:
    identifier: 9ee02375671b
    cmds:
    - exec_out: oardel `cat job_id`
